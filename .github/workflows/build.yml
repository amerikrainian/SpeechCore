name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_mode: [shared, static]
        build_type: [release, debug]
        arch: [x86_64, arm64]
        exclude:
          - os: ubuntu-latest
            arch: arm64  # Ubuntu does not support arm64 in GitHub-hosted runners

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      # macOS-specific setup
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install scons || echo "SCons already installed"

      # Ubuntu-specific setup
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc g++ python3 python3-pip speech-dispatcher libspeechd-dev
          sudo pip3 install scons

      # Java Specific checks
      - name: Check JAVA_HOME
        run: echo "JAVA_HOME is set to $JAVA_HOME"

      - name: List Java Installation Directory
        run: |
          ls -l "$JAVA_HOME" || echo "JAVA_HOME not set"
          ls -l "$JAVA_HOME/lib" || echo "Java lib directory not found"

      # Build with SCons
      - name: Build project
        run: |
          scons -Q build_mode=${{ matrix.build_mode }} build_type=${{ matrix.build_type }} arch=${{ matrix.arch }}

      # Ensure build output exists before uploading
      - name: Verify build artifacts
        run: |
          if [ ! -d "build" ]; then echo "Build directory not found!"; exit 1; fi

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.build_mode }}-${{ matrix.build_type }}
          path: lib/
