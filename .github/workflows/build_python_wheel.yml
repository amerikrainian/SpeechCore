name: Build Python Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    name: Linux-Py${{ matrix.python }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential gcc g++ speech-dispatcher libspeechd-dev

      - name: Install Python build tools
        run: |
          python -m pip install --upgrade pip scons pybind11 wheel setuptools

      - name: Build with SCons
        run: |
          scons -j$(nproc) arch=x86_64 build_mode=static build_type=release build_python=1

      - name: Build Python wheel
        run: python setup.py sdist bdist_wheel

      - name: Stage wheel
        run: |
          mkdir wheels
          cp dist/*.whl wheels/

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-linux-py${{ matrix.python }}
          path: wheels/*.whl

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    name: Windows-Py${{ matrix.python }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Setup Visual Studio environment
        uses: microsoft/setup-msbuild@v1.1

      - name: Install Python build tools
        run: python -m pip install --upgrade pip scons pybind11 wheel setuptools

      - name: Build with SCons
        run: |
          scons -j2 arch=x86_64 build_mode=static build_type=release build_python=1

      - name: Build Python wheel
        run: python setup.py sdist bdist_wheel

      - name: Stage wheel
        run: |
          mkdir wheels
          copy dist\*.whl wheels\

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-windows-py${{ matrix.python }}
          path: wheels/*.whl

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        arch: [x86_64, arm64]
        exclude:
          - python: '3.8'
            arch: arm64
          - python: '3.9'
            arch: arm64
    name: macOS-${{ matrix.arch }}-Py${{ matrix.python }}
    runs-on: ${{ matrix.arch == 'arm64' && 'macos-14' || 'macos-13' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Install system dependencies
        run: |
          brew install scons || echo "SCons already installed"

      - name: Install Python build tools
        run: python -m pip install --upgrade pip scons pybind11 wheel setuptools

      - name: Build with SCons
        run: |
          CORES=$(sysctl -n hw.ncpu)
          scons -j$CORES arch=${{ matrix.arch }} build_mode=static build_type=release build_python=1

      - name: Build Python wheel
        run: python setup.py sdist bdist_wheel

      - name: Stage wheel
        run: |
          mkdir wheels
          cp dist/*.whl wheels/

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-macos-${{ matrix.arch }}-py${{ matrix.python }}
          path: wheels/*.whl

  consolidate:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheel-*
          path: all-wheels/
          merge-multiple: true

      - uses: actions/upload-artifact@v4
        with:
          name: SpeechCore-Python-Wheels
          path: all-wheels/*.whl